{"version": 3, "mappings": "AAAI;IAKA;IAAA;IAAA;IAAA;IAAA;;IACI,IAAGA,CAAA,CAAE,CAAF,CAAAC,UAAA,EAAH;QACID,CAAA,CAAE,CAAF,mBAAO,CAAIA,CAAA,CAAE,CAAF,CAAJ;QACP,IAAG,CAAA,CAAIA,CAAJE,OAAA,IAAA,CAAU,CAAV,CAAA,GAAA,CAAgBF,CAAA,CAAE,CAAF,CAAAG,UAAA,EAAhB,CAAH;YACIH,CAAA,CAAE,CAAF,mBAAO,CAAIA,CAAA,CAAE,CAAF,CAAJ;QADX;YAEA,IAAK,CAAIA,CAAJE,OAAA,IAAA,CAAU,CAAV,CAAL;gBACIE,OAAOJ,CAAA,CAAE,CAAF;gBACPA,CAAA,CAAE,CAAF,IAAO;gBACPA,CAAAA,EAAAA,EAAK,CAACI,IAAD;gBACLJ,CAAA,CAAE,CAAF,IAAO;YAJX;gBAMI,OAAQ,CAAA,CAAA,EAAG,CAAH;YANZ;QAFA;QASA,OAAOK,KAAA,CAAML,CAAN;IAXX;QAaI,OAAQ,CAAA,CAAA,EAAG,CAAH;IAbZ;AANJ", "sources": ["toJS.py"], "names": ["a", "a[0].isdecimal", "a.length", "a[1].isdecimal", "swap", "tuple"], "sourcesContent": ["    def fromUntil(self, a) -> tuple:\n        \"\"\"2 Zahlen sollen ein ordentlicher Zahlenbereich sein, sonst werden sie es\n\n        @rtype: tuple[int,int]\n        @return: Eine Bereichsangabe\n        \"\"\"\n        if a[0].isdecimal():\n            a[0] = int(a[0])\n            if len(a) == 2 and a[1].isdecimal():\n                a[1] = int(a[1])\n            elif len(a) == 1:\n                swap = a[0]\n                a[0] = 1\n                a += [swap]\n                a[0] = 1\n            else:\n                return (1, 1)\n            return tuple(a)\n        else:\n            return (1, 1)\n\n\n"]}